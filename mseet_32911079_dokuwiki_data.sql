-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Хост: sql212.byetcluster.com
-- Время создания: Ноя 03 2022 г., 14:55
-- Версия сервера: 10.3.27-MariaDB
-- Версия PHP: 7.4.8

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `mseet_32911079_dokuwiki_data`
--

-- --------------------------------------------------------

--
-- Структура таблицы `iliyawiki_data`
--

CREATE TABLE `iliyawiki_data` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` text CHARACTER SET utf8 NOT NULL,
  `text` text CHARACTER SET utf8 NOT NULL,
  `size` text CHARACTER SET utf8 NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Дамп данных таблицы `iliyawiki_data`
--

INSERT INTO `iliyawiki_data` (`id`, `name`, `text`, `size`) VALUES
(1, 'война_которой_не_и_нет', 'Война которой не было и нет.\r\n\r\nДля большинства рядовых граждан спецоперация ВС РФ на Украине началась совершенно неожиданно, как гром среди ясного неба. Несмотря на достаточно активное распространение информации о происходящем и причинах решений, принятых руководством страны,  многие узнали о ней только спустя дни и недели.\r\n\r\nСовременное общество, и особенно подрастающее поколение, мало интересуется не только историей или политикой, но и происходящим за пределами своего круга общения. Возможно именно по этой причине долгое время было трудно судить о реакции граждан на происходящее.\r\n\r\nДля многих случившееся стало шоком. Едва ли представители старшего поколения могли  себе представить, что два братских народа, еще совсем недавно плечом к плечу сражавшиеся с фашистскими захватчиками, возьмутся за оружие, встав по разные стороны баррикад. Однако западная пропаганда и многолетнее «промывание мозгов» сделали свое дело, полностью изменив представление украинцев не только о происходящем сегодня, но и о собственной истории. Результат проделанной работы налицо — нескрываемая ненависть и неприятие всего русского на фоне гипертрофированной гордости за «величие украинского народа».\r\n\r\nБезусловно, далеко не все приняли предложенную идеологию. Нашлись и те, кто осознал ущербность концепций, пришедших на замену «традиционному» видению картины мира, что повлекло раскол общества на два лагеря «староверов» и «новообращенных».\r\n\r\nС началом спецоперации весь мир пришел в движение. Многие идеи и цели, десятилетиями скрываемые лидерами США и стран НАТО, стали совершенно очевидны. Мир восстал против России, не пожелавшей подчиняться навязываемым правилам и мириться с невыполнением принятых западом обязательств.\r\n\r\nРоссия начала военную спецоперацию целью проведения которой были провозглашены помощь жителям дружественных ДНР и ЛНР путем денационализации и денацификации территорий. Однако с течением времени стало совершенно очевидно, что освобождение данных территорий от враждебно настроенных нацформирований не решит существующей проблемы. Люди, начавшие «преобразования» на Украине с целью стравливания некогда дружественных народов и ослабления обоих государств не откажутся от своих намерений. Запад начал «войну до последнего украинца».\r\n\r\nЗа минувшие пять месяцев Россия доказала всему миру способность противостоять не только вооруженным силам противника, получившим беспрецедентную поддержку от европейских партнеров, но и экономическим санкциям, направленным на угнетение экономики государства. На фоне появления явно выраженной внешней угрозы произошло сплочение российского общества, чего не наблюдалось долгие годы.\r\n\r\nПо данным ВЦИОМ, порядка 72% россиян поддержали решение президента о начале спецоперации. Противоположную позицию заняли 17% опрошенных.\r\n\r\nНа сегодняшний день российские союзные войска продолжают планомерное движение, освобождая территории, удерживаемые противником. Наиболее активные бои ведутся в районе Семигорья, Северска и Соледара.', '5.48 KB'),
(2, 'добро_пожаловать', 'Привет!\r\nТы находишься на моем Вики сайте.\r\nТы найдешь все что тебе нужно (образы ОС Windows, Windows Wiki, записки).', '187B'),
(3, 'константы', 'Во многих записях сценария широко можно использовать константы. Это предопределённые строки, заключённые в фигурные скобки { }. Программа установки или удаления преобразует константы в их литеральные значения в зависимости от выбора пользователя и конфигурации системы. Например, константа {win} на большинстве систем будет преобразовываться в \"C:\\WINDOWS\".\r\n\r\nСимвол открывающей фигурной скобки \"{\" рассматривается как начало константы. Если необходимо в месте применения константы использовать фактический символ \"{\", введите его дважды \"{{\". При этом дублировать символ закрывающей скобки \"}\" не нужно.\r\n\r\nЕсли за константой следует символ обратной косой черты (\"\\\"), а само значение константы уже заканчивается обратной косой чертой, то программа установки или удаления его автоматически удалит. Таким образом, если значение определённой константы равно \"C:\\\", то запись {constantname}\\file будет преобразована в \"C:\\file\", а не в \"C:\\\\file\". Если необходимо это предотвратить, заключите символ обратной косой черты в фигурные скобки { }, например, {app}{\\}.\r\n\r\nКонстанты каталогов\r\n{app}\r\nКаталог приложения, которую пользователь выбирает на странице мастера \"Выбор папки установки\".\r\nНапример: если в сценарии используется запись {app}\\MYPROG.EXE, а в качестве каталога приложения пользователь выбрал \"C:\\MYPROG\", то программа установки преобразует её в \"C:\\MYPROG\\MYPROG.EXE\".\r\n\r\n{win}\r\nКаталог операционной системы Windows.\r\nНапример: если в сценарии используется запись {win}\\MYPROG.INI, а каталогом ОС Windows является \"C:\\WINDOWS\", то программа установки или удаления преобразует её в \"C:\\WINDOWS\\MYPROG.INI\".\r\n\r\n{sys}\r\nСистемный каталог System32.\r\nНапример: если в сценарии используется запись {sys}\\CTL3D32.DLL, а системным каталогом ОС Windows является \"C:\\WINDOWS\\SYSTEM\", то программа установки или удаления преобразует её в \"C:\\WINDOWS\\SYSTEM\\CTL3D32.DLL\".\r\n\r\nНа 64-разрядных системах Windows, по умолчанию, путь к каталогу System32, возвращаемый этой константой, сопоставляется с каталогом, в котором находятся 32-разрядные системные файлы, как и в 32-разрядных ОС Windows. (Эта константа может быть изменена включением 64-разрядного режима установки.)\r\n\r\n{sysnative}\r\nНа 64-разрядных Windows каталог, возвращаемый этой константой, содержит 64-разрядные системные файлы. На 32-разрядных Windows — 32-разрядные системные файлы.\r\n\r\n{syswow64}\r\nСистемный каталог SysWOW64 на 64-разрядных Windows, обычно \"C:\\WINDOWS\\SysWOW64\". Фактически в этом каталоге находятся 32-разрядные системные файлы. На 32-разрядных Windows каталога SysWOW64 не существует, поэтому эта константа вернёт такой же самый каталог, что и константа {sys}, если будет там использована.\r\n\r\nНе используйте эту константу, если не требуется получить имя фактического каталога, в котором находятся 32-разрядные системные файлы. Необоснованное использование константы {syswow64} в местах, где применение {sys} было бы достаточным, может привести к серьёзным проблемам. (В качестве примера смотрите описание секции [Files] по флагу sharedfile.)\r\n\r\n{src}\r\nКаталог, в котором находятся файлы программы установки.\r\nНапример: если в сценарии используется запись {src}\\MYPROG.EXE и пользователь выполняет установку из \"D:\\Soft\", то программа установки преобразует её в \"D:\\Soft\\MYPROG.EXE\".\r\n\r\n{sd}\r\nСистемный диск, на котором установлена операционная система Windows. Обычно диск \"C:\". Эта константа эквивалентна переменной среды SystemDrive.\r\n\r\n{commonpf}\r\nКаталог Program Files, в который обычно выполняется установка приложений. Константа {commonpf} эквивалентна константе {commonpf32}, если установка не работает в 64-разрядном режиме, иначе эквивалентна константе {commonpf64}.\r\n\r\n{commonpf32}\r\n32-разрядный каталог Program Files, предназначенный для установки 32-разрядных приложений. Обычно это путь \"C:\\Program Files\" на 32-разрядных Windows и \"C:\\Program Files (x86)\" на 64-разрядных Windows.\r\n\r\n{commonpf64}\r\n64-разрядный каталог Program Files, предназначенный для установки 64-разрядных приложений. Обычно это путь \"C:\\Program Files\". Константа действительна только на 64-разрядных Windows. При попытке её использования на 32-разрядных Windows будет вызвано исключение.\r\n\r\n{commoncf}\r\nКаталог Common Files, в который обычно выполняется установка системных файлов приложений. Константа {commoncf} эквивалентна константе {commoncf32}, если установка не работает в 64-разрядном режиме, иначе эквивалентна константе {commoncf64}.\r\n\r\n{commoncf32}\r\n32-разрядный каталог Common Files, предназначенный для установки 32-разрядных системных файлов приложений. Обычно это путь \"C:\\Program Files\\Common Files\" на 32-разрядных Windows и \"C:\\Program Files (x86)\\Common Files\" на 64-разрядных Windows.\r\n\r\n{commoncf64}\r\n64-разрядный каталог Common Files, предназначенный для установки 64-разрядных системных файлов приложений. Обычно это путь \"C:\\Program Files\\Common Files\". Константа действительна только на 64-разрядных Windows. При попытке её использования на 32-разрядных Windows будет вызвано исключение.\r\n\r\n{tmp}\r\nВременный каталог, используемый программой установки или удаления. Константа не является значением переменной окружения TEMP пользователя. Это подкаталог во временном каталоге пользователя, который создаёт программа установки или удаления при запуске (с именем подобно \"C:\\WINDOWS\\TEMP\\IS-xxxxx.tmp\"). Все файлы и подкаталоги в этом каталоге автоматически удаляются, когда программа установки или удаления завершает свою работу. При установке эта константа обычно используется для извлечения файлов, которые должны быть выполнены в секции [Run], но не нужны после установки.\r\n\r\n{commonfonts}\r\nКаталог шрифтов. Обычно называется \"Fonts\" и находится в каталоге Windows.\r\n\r\n{dao}\r\nКаталог DAO. Константа эквивалентна записи {commoncf}\\Microsoft Shared\\DAO.\r\n\r\n{dotnet11}\r\nКорневой каталог установки 32-разрядной .NET Framework версии 1.1.\r\n\r\nПри попытке использования этой константы на системах, на которых нет .NET Framework версии 1.1, будет вызвано исключение.\r\n\r\n{dotnet20}\r\nКорневой каталог установки .NET Framework версии 2.0-3.5. Константа {dotnet20} эквивалентна константе {dotnet2032}, если установка не работает в 64-разрядном режиме, иначе эквивалентна константе {dotnet2064}.\r\n\r\nПри попытке использования этой константы на системах, на которых нет .NET Framework версии 2.0-3.5, будет вызвано исключение.\r\n\r\n{dotnet2032}\r\nКорневой каталог установки 32-разрядной .NET Framework версии 2.0-3.5.\r\n\r\nПри попытке использования этой константы на системах, на которых нет .NET Framework версии 2.0-3.5, будет вызвано исключение.\r\n\r\n{dotnet2064}\r\nКорневой каталог установки 64-разрядной .NET Framework версии 2.0-3.5. Константа действительна только на 64-разрядных Windows.\r\n\r\nПри попытке использования этой константы на системах, на которых нет .NET Framework версии 2.0-3.5, будет вызвано исключение.\r\n\r\n{dotnet40}\r\nКорневой каталог установки .NET Framework версии 4.0 и выше. Константа {dotnet40} эквивалентна константе {dotnet4032}, если установка не работает в 64-разрядном режиме, иначе эквивалентна константе {dotnet4064}.\r\n\r\nПри попытке использования этой константы на системах, на которых нет .NET Framework версии 4.0 или выше, будет вызвано исключение.\r\n\r\nСм. также IsDotNetInstalled.\r\n\r\n{dotnet4032}\r\nКорневой каталог установки 32-разрядной .NET Framework версии 4.0 и выше.\r\n\r\nПри попытке использования этой константы на системах, на которых нет .NET Framework версии 4.0 или выше, будет вызвано исключение.\r\n\r\n{dotnet4064}\r\nКорневой каталог установки 64-разрядной .NET Framework версии 4.0 и выше. Константа действительна только на 64-разрядных Windows.\r\n\r\nПри попытке использования этой константы на системах, на которых нет .NET Framework версии 4.0 или выше, будет вызвано исключение.\r\n\r\nКонстанты специальных папок\r\nInno Setup поддерживает другой набор констант каталога, именуемый константы специальных папок. Их можно использовать так же, как и другие константы каталога.\r\n\r\nКонстанты \"common\" относятся к профилю Все пользователи.\r\n\r\nКонстанты \"user\" относятся к профилю пользователя, который запускает программу установки. Часто этот пользователь является не тем пользователем, который вошёл в систему, поэтому используйте константы \"user\" с осторожностью.\r\n\r\n{group}\r\nПуть к папке в меню «Пуск», которую пользователь выбрал на странице мастера \"Выберите папку в меню «Пуск»\". Если инсталлятор работает в режиме не административной установки, папка создаётся в профиле текущего пользователя, иначе — в профиле Все пользователи.\r\n\r\n{localappdata}\r\nПуть к локальной (без роуминга) папке \"Application Data\" текущего пользователя.\r\n\r\n{userappdata} и {commonappdata}\r\nПуть к папке \"Application Data\".\r\n\r\n{usercf}\r\nПуть к папке \"Common Files\" текущего пользователя. Константа {usercf} поддерживается только в Windows 7 и более поздних версиях. При использовании в предыдущих версиях Windows она будет преобразована в {localappdata}\\Programs\\Common.\r\n\r\n{userdesktop} и {commondesktop}\r\nПуть к папке \"Рабочий стол\".\r\n\r\n{userdocs} и {commondocs}\r\nПуть к папке \"Мои документы\".\r\n\r\n{userfavorites}\r\nПуть к папке \"Избранное\" текущего пользователя. (Общей папки \"Избранное\" не существует.)\r\n\r\n{userfonts}\r\nПуть к папке \"Fonts\" текущего пользователя. Только Windows 10 версии 1803 и выше поддерживает константу {userfonts}. Соответствует каталогу {localappdata}\\Microsoft\\Windows\\Fonts.\r\n\r\n{userpf}\r\nПуть к папке \"Program Files\" текущего пользователя. Константа {userpf} поддерживается только в Windows 7 и более поздних версиях. При использовании в предыдущих версиях Windows она будет преобразована в {localappdata}\\Programs.\r\n\r\n{userprograms} и {commonprograms}\r\nПуть к папке \"Программы\" в меню «Пуск».\r\n\r\n{usersavedgames}\r\nПуть к папке \"Сохранения игр\" (Saved Games) текущего пользователя.\r\n\r\n{usersendto}\r\nПуть к папке \"Отправить\" текущего пользователя. (Общей папки \"Отправить\" не существует.)\r\n\r\n{userfonts}\r\nПуть к папке \"Fonts\" текущего пользователя. Только Windows 10 версии 1803 и выше поддерживает константу {userfonts}. Соответствует каталогу {localappdata}\\Microsoft\\Windows\\Fonts.\r\n\r\n{userpf}\r\nПуть к папке \"Program Files\" текущего пользователя. Константа {userpf} поддерживается только в Windows 7 и более поздних версиях. При использовании в предыдущих версиях Windows она будет преобразована в {localappdata}\\Programs.\r\n\r\n{userprograms} и {commonprograms}\r\nПуть к папке \"Программы\" в меню «Пуск».\r\n\r\n{usersavedgames}\r\nПуть к папке \"Сохранения игр\" (Saved Games) текущего пользователя.\r\n\r\n{usersendto}\r\nПуть к папке \"Отправить\" текущего пользователя. (Общей папки \"Отправить\" не существует.)\r\n\r\n{userstartmenu} и {commonstartmenu}\r\nПуть к папке верхнего уровня меню «Пуск».\r\n\r\n{userstartup} и {commonstartup}\r\nПуть к папке \"Автозагрузка\" в меню «Пуск».\r\n\r\n{usertemplates} и {commontemplates}\r\nПуть к папке \"Шаблоны\".\r\n\r\nКонстанты \"auto\"\r\nПомимо констант \"common\" и \"user\", Inno Setup также поддерживает константы \"auto\". Если инсталлятор работает в режиме не административной установки, константы \"auto\" сопоставляются формой \"user\", иначе — с формой \"common\".\r\n\r\nЕсли это возможно, рекомендуется всегда использовать константы \"auto\", чтобы предотвратить появление ошибок.\r\n\r\n\r\nАдминистративный	Не административный\r\nautoappdata	commonappdata	userappdata\r\nautocf	commoncf	usercf\r\nautocf32	commoncf32	usercf\r\nautocf64	commoncf64	usercf\r\nautodesktop	commondesktop	userdesktop\r\nautodocs	commondocs	userdocs\r\nautofonts	commonfonts	userfonts\r\nautopf	commonpf	userpf\r\nautopf32	commonpf32	userpf\r\nautopf64	commonpf64	userpf\r\nautoprograms	commonprograms	userprograms\r\nautostartmenu	commonstartmenu	userstartmenu\r\nautostartup	commonstartup	userstartup\r\nautotemplates	commontemplates	usertemplates\r\n\r\n\r\nПереименованные константы\r\nНачиная с Inno Setup 6 некоторые константы каталогов и специальных папок получили новые имена. В сценариях старые имена все ещё поддерживаются, но рекомендуется их обновить на новые (или применить форму \"auto\"), иначе компилятор выдаст предупреждение, если этого не сделать.\r\n\r\nСтарое имя	Новое имя\r\ncf	commoncf\r\ncf32	commoncf32\r\ncf64	commoncf64\r\nfonts	commonfonts\r\npf	commonpf\r\npf32	commonpf32\r\npf64	commonpf64\r\nsendto	usersendto\r\n\r\n\r\nПрочие константы\r\n{\\}\r\nСимвол обратной косой черты. В начале этой главы описано различие в использовании между {\\} и \\.\r\n\r\n{%NAME|DefaultValue}\r\nВыполняет вставку значения переменной среды.\r\n\r\nNAME определяет имя используемой переменной среды\r\nDefaultValue определяет строку для вставки, если указанная переменная в системе пользователя не существует.\r\nЕсли необходимо заключить внутри константы запятую, вертикальную черту (\"|\") или закрывающую фигурную скобку (\"}\"), следует использовать экранирование при помощи \"%-кодирования\". Это означает, что вместо символа записывается его двузначный код в шестнадцатеричном формате с приставкой \"%\". Так символ запятой нужно заменить на escape-код \"%2c\", вертикальную черту — \"%7c\", а закрывающую скобку — \"%7d\". Если нужно заключить реальный символ \"%\", используйте escape-код \"%25\".\r\nNAME и DefaultValue могут содержать константы. Обратите внимание, что закрывающую фигурную скобку константы здесь, как описано выше, экранировать не нужно; это необходимо только тогда, когда закрывающая скобка используется в другом месте.\r\nПримеры:\r\n{%COMSPEC}\r\n{%PROMPT|$P$G}\r\n{cmd}\r\nПолный путь к стандартному системному интерпретатору команд. Обычно это Windows\\System32\\cmd.exe. Обратите внимание, что переменная среды COMSPEC не используется при расширении этой константы.\r\n\r\n{cmd}\r\nПолный путь к стандартному системному интерпретатору команд. Обычно это Windows\\System32\\cmd.exe. Обратите внимание, что переменная среды COMSPEC не используется при расширении этой константы.\r\n\r\n{computername}\r\nИмя компьютера, на котором запущена программа установки или удаления (возвращается функцией GetComputerName).\r\n\r\n{drive:Path}\r\nИзвлекает и возвращает букву диска и двоеточие (например, \"C:\") по указанному пути. В случае, если путь является сетевым, возвращает имя сервера и общего ресурса (например, \"\\\\SERVER\\SHARE\").\r\n\r\nPath определяет путь.\r\nЕсли необходимо заключить внутри константы запятую, вертикальную черту (\"|\") или закрывающую фигурную скобку (\"}\"), следует использовать экранирование при помощи \"%-кодирования\". Это означает, что вместо символа записывается его двузначный код в шестнадцатеричном формате с приставкой \"%\". Так символ запятой нужно заменить на escape-код \"%2c\", вертикальную черту — \"%7c\", а закрывающую скобку — \"%7d\". Если нужно заключить реальный символ \"%\", используйте escape-код \"%25\".\r\nPath может содержать константы. Обратите внимание, что закрывающую фигурную скобку константы здесь, как описано выше, экранировать не нужно; это необходимо только тогда, когда закрывающая скобка используется в другом месте.\r\nПримеры:\r\n{drive:{src}}\r\n{drive:c:\\path\\file}\r\n{drive:\\\\server\\share\\path\\file}\r\n\r\n{groupname}\r\nПуть к папке в меню «Пуск», которую пользователь выбрал на странице мастера \"Выберите папку в меню «Пуск»\". Эта константа отличается от константы {group} тем, что содержит только имя папки, а не путь к ней.\r\n\r\n{hwnd}\r\n(Специального назначения) преобразует фоновое окно программы установки в дескриптор окна.\r\n\r\n{wizardhwnd}\r\n(Специального назначения) преобразует окно мастера программы установки в дескриптор окна. Дескриптор равен \"0\", если в момент трансляции дескриптор окна недоступен.\r\n\r\n{ini:Filename,Section,Key|DefaultValue}\r\nВыполняет вставку значения из файла INI.\r\n\r\nFilename определяет имя INI-файла.\r\nSection определяет имя секции.\r\nKey определяет имя ключа.\r\nDefaultValue определяет строку для вставки, если указанное значение ключа не существует.\r\nЕсли необходимо заключить внутри константы запятую, вертикальную черту (\"|\") или закрывающую фигурную скобку (\"}\"), следует использовать экранирование при помощи \"%-кодирования\". Это означает, что вместо символа записывается его двузначный код в шестнадцатеричном формате с приставкой \"%\". Так символ запятой нужно заменить на escape-код \"%2c\", вертикальную черту — \"%7c\", а закрывающую скобку — \"%7d\". Если нужно заключить реальный символ \"%\", используйте escape-код \"%25\".\r\nFilename, Section, Key и DefaultValue могут содержать константы. Обратите внимание, что закрывающую фигурную скобку константы здесь, как описано выше, экранировать не нужно; это необходимо только тогда, когда закрывающая скобка используется в другом месте.\r\nПример:\r\n{ini:{win}\\MyProg.ini,Settings,Path|{autopf}\\My Program}\r\n{language}\r\nВнутреннее имя выбранного языка. Более подробную информацию смотрите в описании секции [Languages].\r\n\r\n{cm:MessageName}\r\n{cm:MessageName,Arguments}\r\nВыполняет вставку значения пользовательского сообщения на основе активного языка.\r\n\r\nMessageName определяет имя пользовательского сообщения. Более подробную информацию смотрите в описании секции [CustomMessages].\r\nArguments дополнительно определяет разделенный запятыми список аргументов для значения сообщения.\r\nЕсли необходимо заключить внутри константы запятую, вертикальную черту (\"|\") или закрывающую фигурную скобку (\"}\"), следует использовать экранирование при помощи \"%-кодирования\". Это означает, что вместо символа записывается его двузначный код в шестнадцатеричном формате с приставкой \"%\". Так символ запятой нужно заменить на escape-код \"%2c\", вертикальную черту — \"%7c\", а закрывающую скобку — \"%7d\". Если нужно заключить реальный символ \"%\", используйте escape-код \"%25\".\r\nКаждый аргумент в Arguments может содержать константы. Обратите внимание, что закрывающую фигурную скобку константы здесь, как описано выше, экранировать не нужно; это необходимо только тогда, когда закрывающая скобка используется в другом месте.\r\nПример:\r\n{cm:LaunchProgram,Inno Setup}\r\nВ приведенном выше примере сообщение будет транслировано в \"Launch Inno Setup\", если активным языком является английский (English).\r\n\r\n{reg:HKxx\\SubkeyName,ValueName|DefaultValue}\r\nВыполняет вставку значения реестра.\r\n\r\nHKxx определяет корневой раздел реестра. Действительные значения корневых разделов реестра смотрите в описании секции [Registry].\r\nSubkeyName определяет имя подраздела реестра.\r\nValueName определяет имя значения. Если необходимо получить значение ключа \"по умолчанию\", оставьте параметр ValueName пустым.\r\nDefaultValue определяет строку для вставки, если указанное значение реестра не существует или не является строковым типом (REG_SZ или REG_EXPAND_SZ).\r\nЕсли необходимо заключить внутри константы запятую, вертикальную черту (\"|\") или закрывающую фигурную скобку (\"}\"), следует использовать экранирование при помощи \"%-кодирования\". Это означает, что вместо символа записывается его двузначный код в шестнадцатеричном формате с приставкой \"%\". Так символ запятой нужно заменить на escape-код \"%2c\", вертикальную черту — \"%7c\", а закрывающую скобку — \"%7d\". Если нужно заключить реальный символ \"%\", используйте escape-код \"%25\".\r\nSubkeyName, ValueName, и DefaultValue могут содержать константы. Обратите внимание, что закрывающую фигурную скобку константы здесь, как описано выше, экранировать не нужно; это необходимо только тогда, когда закрывающая скобка используется в другом месте.\r\nПример:\r\n{reg:HKA\\Software\\My Program,Path|{autopf}\\My Program}\r\n{param:ParamName|DefaultValue}\r\nВыполняет вставку значения параметра командной строки.\r\nParamName определяет имя параметра командной строки.\r\nDefaultValue определяет строку для вставки, если указанный параметр командной строки не существует или не удалось определить его значение.\r\nЕсли необходимо заключить внутри константы запятую, вертикальную черту (\"|\") или закрывающую фигурную скобку (\"}\"), следует использовать экранирование при помощи \"%-кодирования\". Это означает, что вместо символа записывается его двузначный код в шестнадцатеричном формате с приставкой \"%\". Так символ запятой нужно заменить на escape-код \"%2c\", вертикальную черту — \"%7c\", а закрывающую скобку — \"%7d\". Если нужно заключить реальный символ \"%\", используйте escape-код \"%25\".\r\nParamName и DefaultValue могут содержать константы. Обратите внимание, что закрывающую фигурную скобку константы здесь, как описано выше, экранировать не нужно; это необходимо только тогда, когда закрывающая скобка используется в другом месте.\r\nПример:\r\n{param:Path|{autopf}\\My Program}\r\nВ приведенном выше примере, указанная командная строка /Path=\"c:\\My Program\" преобразуется в c:\\My Program.\r\n{srcexe}\r\nПолный путь к файлу программы установки, например, \"C:\\SETUP.EXE\".\r\n\r\n{uninstallexe}\r\nПолный путь к файлу программы удаления, извлечённого из программы установки, например, \"C:\\Program Files\\My Program\\unins000.exe\". Эта константа чаще всего используется в секции [Icons] для создания значка деинсталлятора. Константа действительна только в том случае, если директиве Uninstallable в секции [Setup] присвоено значение yes (используется по умолчанию).\r\n\r\n{sysuserinfoname}\r\n{sysuserinfoorg}\r\nСоответственно имя и организация, на которые зарегистрирована Windows. Эта информация считывается из реестра.\r\n\r\n{userinfoname}\r\n{userinfoorg}\r\n{userinfoserial}\r\nСоответственно имя, организация и серийный номер, которые пользователь ввёл на странице мастера \"Информация о пользователе\" (эту страница может быть включена директивой UserInfoPage). Обычно эти константы используются в записях секции [Registry] или [INI] для сохранения их значения с целью последующего использования.\r\n\r\n{username}\r\nИмя пользователя, выполняющего программу установки или удаления (возвращается функцией GetUserName).\r\n\r\n{log}\r\nИмя файла отчёта или пустая строка, если создание файла журнала не включено.', '34.5 KB');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `iliyawiki_data`
--
ALTER TABLE `iliyawiki_data`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `iliyawiki_data`
--
ALTER TABLE `iliyawiki_data`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
